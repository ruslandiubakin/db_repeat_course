"""Initial commit

Revision ID: 721217232db3
Revises: 
Create Date: 2023-11-22 12:25:36.940340

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '721217232db3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Educational_Institutions',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=300), nullable=True),
    sa.Column('TypeName', sa.String(length=300), nullable=True),
    sa.Column('RegName', sa.String(length=300), nullable=True),
    sa.Column('AreaName', sa.String(length=300), nullable=True),
    sa.Column('TerName', sa.String(length=300), nullable=True),
    sa.Column('Parent', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('Students',
    sa.Column('ID', sa.String(length=300), nullable=False),
    sa.Column('Birth', sa.Integer(), nullable=True),
    sa.Column('SexTypeName', sa.String(length=300), nullable=True),
    sa.Column('RegName', sa.String(length=300), nullable=True),
    sa.Column('AreaName', sa.String(length=300), nullable=True),
    sa.Column('TerName', sa.String(length=300), nullable=True),
    sa.Column('RegTypeName', sa.String(length=300), nullable=True),
    sa.Column('TerTypeName', sa.String(length=300), nullable=True),
    sa.Column('ClassProfileName', sa.String(length=300), nullable=True),
    sa.Column('ClassLangName', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('Subjects',
    sa.Column('ID', sa.String(length=50), nullable=False),
    sa.Column('Name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('EI_of_Students',
    sa.Column('StudentID', sa.String(length=300), nullable=False),
    sa.Column('EIID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['EIID'], ['Educational_Institutions.ID'], ),
    sa.ForeignKeyConstraint(['StudentID'], ['Students.ID'], ),
    sa.PrimaryKeyConstraint('StudentID', 'EIID')
    )
    op.create_table('Results_Of_Students',
    sa.Column('StudentID', sa.String(length=300), nullable=False),
    sa.Column('SubjectID', sa.String(length=50), nullable=False),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Lang', sa.String(length=100), nullable=True),
    sa.Column('TestStatus', sa.String(length=100), nullable=True),
    sa.Column('UkrSubTest', sa.String(length=100), nullable=True),
    sa.Column('DPALevel', sa.String(length=100), nullable=True),
    sa.Column('Ball100', sa.Float(), nullable=True),
    sa.Column('Ball12', sa.Float(), nullable=True),
    sa.Column('Ball', sa.Float(), nullable=True),
    sa.Column('AdaptScale', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['StudentID'], ['Students.ID'], ),
    sa.ForeignKeyConstraint(['SubjectID'], ['Subjects.ID'], ),
    sa.PrimaryKeyConstraint('StudentID', 'SubjectID')
    )
    op.create_table('ZNO_Places',
    sa.Column('StudentID', sa.String(length=300), nullable=False),
    sa.Column('SubjectID', sa.String(length=50), nullable=False),
    sa.Column('InsitutionID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['InsitutionID'], ['Educational_Institutions.ID'], ),
    sa.ForeignKeyConstraint(['StudentID'], ['Students.ID'], ),
    sa.ForeignKeyConstraint(['SubjectID'], ['Subjects.ID'], ),
    sa.PrimaryKeyConstraint('StudentID', 'SubjectID', 'InsitutionID')
    )
    # op.drop_table('Results_ZNO_2021')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('Results_ZNO_2021',
    # sa.Column('OUTID', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIRTH', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('SEXTYPENAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('REGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('AREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('TERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('REGTYPENAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('TERTYPENAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CLASSPROFILENAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CLASSLANGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('EONAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('EOTYPENAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('EOREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('EOAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('EOTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('EOPARENT', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UMLTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UMLTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UMLBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UMLBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UMLBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UMLADAPTSCALE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UMLPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UMLPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UMLPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UMLPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRSUBTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UKRBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UKRBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UKRADAPTSCALE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('UKRPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('UKRPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('HISTBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('HISTBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('HISTPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('HISTPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('MATHBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('MATHDPALEVEL', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('MATHPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('MATHSTBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('MATHSTPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('MATHSTPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('PHYSBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('PHYSBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('PHYSPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('PHYSPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('CHEMBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('CHEMBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('CHEMPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('CHEMPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('BIOBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('BIOBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('BIOPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('BIOPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOLANG', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('GEOBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('GEOBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('GEOPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('GEOPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('ENGBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('ENGDPALEVEL', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('ENGPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('ENGPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRATEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRATESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRABALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('FRABALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('FRADPALEVEL', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRABALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('FRAPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRAPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRAPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('FRAPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUTEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUTESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUBALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('DEUBALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('DEUDPALEVEL', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUBALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('DEUPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('DEUPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('SPATEST', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('SPATESTSTATUS', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('SPABALL100', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('SPABALL12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('SPADPALEVEL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('SPABALL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    # sa.Column('SPAPTNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('SPAPTREGNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('SPAPTAREANAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('SPAPTTERNAME', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('YEAR', sa.INTEGER(), autoincrement=False, nullable=True)
    # )
    op.drop_table('ZNO_Places')
    op.drop_table('Results_Of_Students')
    op.drop_table('EI_of_Students')
    op.drop_table('Subjects')
    op.drop_table('Students')
    op.drop_table('Educational_Institutions')
    # ### end Alembic commands ###
